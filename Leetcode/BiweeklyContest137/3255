class Solution {
public:
    vector<int> resultsArray(vector<int>& nums, int k) {
        deque<int> dq; // stores index in increasing fashion from back to front
        vector<int> ans;
        int n = nums.size();

        for (int i = 0; i < n; i++) {
            if (!dq.empty() && dq.front() == i - k)
                dq.pop_front();
            int ansi = nums[i];
            while (!dq.empty() && (nums[dq.back()] >= nums[i] || nums[dq.back()]+1 != nums[i]))
                {
                dq.pop_back();
                ansi = -1;
                }
            
            dq.push_back(i);
            if(dq.size() != k) ansi = -1;
             
            if (i >= k - 1 )
                ans.push_back(ansi);
            
        }

        return ans;
    }
};
